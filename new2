consider this wishlist.component.html code:

<div class="container my-4">
  <h2 class="mb-4">Your Wishlist</h2>

  <!-- Loading -->
  <div *ngIf="isLoading" class="text-center">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
    <p>Loading your wishlist items...</p>
  </div>

  <!-- Error -->
  <div *ngIf="errorMessage" class="alert alert-danger">
    {{ errorMessage }}
  </div>

  <!-- Empty Wishlist -->
  <div *ngIf="!isLoading && savedProducts.length === 0" class="text-center mt-5">
    <div class="alert alert-info w-50 mx-auto">
      Your wishlist is empty. Start saving your favorite products!
    </div>
  </div>

  <!-- Wishlist Items -->
  <div class="row" *ngIf="!isLoading && savedProducts.length > 0">
    <div class="col-md-6 mb-4" *ngFor="let product of savedProducts">
      <div class="card h-100 shadow-sm p-3" style="border-radius: 10px;">
        <div class="row g-0">

          <!-- Image -->
          <div class="col-md-4">
            <img [src]="product.thumbnailUrl"
                 class="img-fluid rounded-start"
                 alt="{{ product.name }}"
                 style="height: 180px; width: 100%; object-fit: cover; cursor: pointer;"
                 (click)="viewProductDetails(product.productId)">
          </div>

          <!-- Details -->
          <div class="col-md-8">
            <div class="card-body h-100 d-flex flex-column">
              <h5 class="card-title mb-2" style="cursor: pointer;"
                  (click)="viewProductDetails(product.productId)">
                {{ product.name }}
              </h5>
              <p class="fw-bold text-success mb-3">₹{{ product.price }}</p>

              <!-- Buttons -->
              <div class="mt-auto d-flex gap-2">
                <button class="btn btn-primary btn-sm"
                        (click)="addToCart(product)">
                  Add to Cart
                </button>

                <button class="btn btn-outline-danger btn-sm"
                        (click)="removeFromWishlist(product.productId)">
                  Remove
                </button>
              </div>

            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>
------------
consider this wishlist.component.ts

<div class="container my-4">
  <h2 class="mb-4">Your Wishlist</h2>

  <!-- Loading -->
  <div *ngIf="isLoading" class="text-center">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
    <p>Loading your wishlist items...</p>
  </div>

  <!-- Error -->
  <div *ngIf="errorMessage" class="alert alert-danger">
    {{ errorMessage }}
  </div>

  <!-- Empty Wishlist -->
  <div *ngIf="!isLoading && savedProducts.length === 0" class="text-center mt-5">
    <div class="alert alert-info w-50 mx-auto">
      Your wishlist is empty. Start saving your favorite products!
    </div>
  </div>

  <!-- Wishlist Items -->
  <div class="row" *ngIf="!isLoading && savedProducts.length > 0">
    <div class="col-md-6 mb-4" *ngFor="let product of savedProducts">
      <div class="card h-100 shadow-sm p-3" style="border-radius: 10px;">
        <div class="row g-0">

          <!-- Image -->
          <div class="col-md-4">
            <img [src]="product.thumbnailUrl"
                 class="img-fluid rounded-start"
                 alt="{{ product.name }}"
                 style="height: 180px; width: 100%; object-fit: cover; cursor: pointer;"
                 (click)="viewProductDetails(product.productId)">
          </div>

          <!-- Details -->
          <div class="col-md-8">
            <div class="card-body h-100 d-flex flex-column">
              <h5 class="card-title mb-2" style="cursor: pointer;"
                  (click)="viewProductDetails(product.productId)">
                {{ product.name }}
              </h5>
              <p class="fw-bold text-success mb-3">₹{{ product.price }}</p>

              <!-- Buttons -->
              <div class="mt-auto d-flex gap-2">
                <button class="btn btn-primary btn-sm"
                        (click)="addToCart(product)">
                  Add to Cart
                </button>

                <button class="btn btn-outline-danger btn-sm"
                        (click)="removeFromWishlist(product.productId)">
                  Remove
                </button>
              </div>

            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>
evaluate the above two codes and modify accordingly,so that it satisfies the below condition:
1.the products in wishlist should have options of add to cart and remove from wishlist and by clicking on them they have to work accordingly.
=======

wishlist.component.html

<div class="container my-4">
  <h2 class="mb-4">Your Wishlist</h2>

  <!-- Loading -->
  <div *ngIf="isLoading" class="text-center">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
    <p>Loading your wishlist items...</p>
  </div>

  <!-- Error -->
  <div *ngIf="errorMessage" class="alert alert-danger">
    {{ errorMessage }}
  </div>

  <!-- Empty Wishlist -->
  <div *ngIf="!isLoading && savedProducts.length === 0" class="text-center mt-5">
    <div class="alert alert-info w-50 mx-auto">
      Your wishlist is empty. Start saving your favorite products!
    </div>
  </div>

  <!-- Wishlist Items -->
  <div class="row" *ngIf="!isLoading && savedProducts.length > 0">
    <div class="col-md-6 mb-4" *ngFor="let product of savedProducts">
      <div class="card h-100 shadow-sm p-3" style="border-radius: 10px;">
        <div class="row g-0">

          <!-- Image -->
          <div class="col-md-4">
            <img [src]="product.thumbnailUrl"
                 class="img-fluid rounded-start"
                 alt="{{ product.name }}"
                 style="height: 180px; width: 100%; object-fit: cover; cursor: pointer;"
                 (click)="viewProductDetails(product.productId)">
          </div>

          <!-- Details -->
          <div class="col-md-8">
            <div class="card-body h-100 d-flex flex-column">
              <h5 class="card-title mb-2" style="cursor: pointer;"
                  (click)="viewProductDetails(product.productId)">
                {{ product.name }}
              </h5>
              <p class="fw-bold text-success mb-3">₹{{ product.price }}</p>

              <!-- Buttons -->
              <div class="mt-auto d-flex gap-2">
                <button class="btn btn-primary btn-sm"
                        (click)="addToCart(product)">
                  Add to Cart
                </button>

                <button class="btn btn-outline-danger btn-sm"
                        (click)="removeFromWishlist(product.productId)">
                  Remove
                </button>
              </div>

            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>
============
wishlist.component.ts

import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { WishlistService } from '../services/wishlist.service';
import { CartService } from '../services/cart.service';

@Component({
  selector: 'app-wishlist',
  templateUrl: './wishlist.component.html',
  styleUrls: ['./wishlist.component.css']
})
export class WishlistComponent implements OnInit {

  savedProducts: any[] = [];
  isLoading = false;
  errorMessage = '';

  constructor(
    private wishlistService: WishlistService,
    private cartService: CartService,
    private router: Router
  ) {}

  ngOnInit(): void {
    this.loadWishlist();
  }

  loadWishlist(): void {
    this.isLoading = true;
    this.errorMessage = '';

    this.wishlistService.getSavedProducts().subscribe({
      next: (products) => {
        this.savedProducts = products;
        this.isLoading = false;
      },
      error: () => {
        this.errorMessage = 'Failed to load wishlist. Please try again later.';
        this.isLoading = false;
      }
    });
  }

  addToCart(product: any): void {
    this.cartService.addProductToCart(product).subscribe({
      next: () => {
        alert('Product added to cart.');
      },
      error: () => {
        alert('Failed to add product to cart.');
      }
    });
  }

  removeFromWishlist(productId: number): void {
    this.wishlistService.removeProductFromWishlist(productId).subscribe({
      next: () => {
        this.savedProducts = this.savedProducts.filter(p => p.productId !== productId);
      },
      error: () => {
        alert('Failed to remove product from wishlist.');
      }
    });
  }

  viewProductDetails(productId: number): void {
    this.router.navigate(['/product', productId]);
  }
}
========
wishlist.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class WishlistService {
  private apiUrl = '/api/User';

  constructor(private http: HttpClient) {}

  getSavedProducts(): Observable<any[]> {
    return this.http.get<any[]>(`${this.apiUrl}/GetSavedProducts`);
  }

  removeProductFromWishlist(productId: number): Observable<void> {
    return this.http.delete<void>(`${this.apiUrl}/RemoveFromWishlist/${productId}`);
  }
}
========
cart.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class CartService {
  private apiUrl = '/api/Cart';

  constructor(private http: HttpClient) {}

  addProductToCart(product: any): Observable<void> {
    return this.http.post<void>(`${this.apiUrl}/Add`, product);
  }
}

