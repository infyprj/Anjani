product.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({ providedIn: 'root' })
export class ProductService {
  private baseUrl = 'https://your-api-url/api/products'; // Replace with your actual API endpoint

  constructor(private http: HttpClient) {}

  searchProducts(term: string): Observable<any[]> {
    return this.http.get<any[]>(`${this.baseUrl}/search?term=${term}`);
  }

  getProductsByCategory(categoryId: number): Observable<any[]> {
    return this.http.get<any[]>(`${this.baseUrl}/category/${categoryId}`);
  }

  getCategories(): Observable<any[]> {
    return this.http.get<any[]>('https://your-api-url/api/categories');
  }
}

__________________

product.component.ts

import { Component, OnInit } from '@angular/core';
import { ProductService } from '../services/product.service';

@Component({
  selector: 'app-product',
  templateUrl: './product.component.html',
})
export class ProductComponent implements OnInit {
  searchTerm: string = '';
  products: any[] = [];
  categories: any[] = [];
  selectedCategoryId: number = 0;
  role: string = 'Customer'; // Set this based on authentication result (e.g., from localStorage or service)

  constructor(private productService: ProductService) {}

  ngOnInit() {
    this.loadCategories();
    this.loadProducts(); // Load all by default
  }

  loadCategories() {
    this.productService.getCategories().subscribe(res => {
      this.categories = res;
    });
  }

  loadProducts() {
    if (this.selectedCategoryId > 0) {
      this.productService.getProductsByCategory(this.selectedCategoryId).subscribe(res => {
        this.products = res;
      });
    } else {
      this.productService.searchProducts('').subscribe(res => {
        this.products = res;
      });
    }
  }

  search() {
    this.productService.searchProducts(this.searchTerm).subscribe(res => {
      this.products = res;
    });
  }

  filterByCategory() {
    this.loadProducts();
  }

  isAdmin(): boolean {
    return this.role === 'Admin';
  }
}

________________

product.component.html

<div class="container mt-4">
  <div class="row mb-3">
    <div class="col-md-6">
      <input
        type="text"
        class="form-control"
        [(ngModel)]="searchTerm"
        placeholder="Search for products"
        (keyup.enter)="search()"
      />
    </div>
    <div class="col-md-3">
      <select class="form-select" [(ngModel)]="selectedCategoryId" (change)="filterByCategory()">
        <option value="0">All Categories</option>
        <option *ngFor="let category of categories" [value]="category.categoryID">
          {{ category.name }}
        </option>
      </select>
    </div>
    <div class="col-md-3">
      <button class="btn btn-primary w-100" (click)="search()">Search</button>
    </div>
  </div>

  <div *ngIf="products.length === 0" class="alert alert-warning">
    No products available.
  </div>

  <div class="row">
    <div class="col-md-4 mb-4" *ngFor="let product of products">
      <div class="card h-100">
        <img [src]="product.thumbnailURL" class="card-img-top" alt="{{ product.name }}" />
        <div class="card-body">
          <h5 class="card-title">{{ product.name }}</h5>
          <p class="card-text">{{ product.description }}</p>
          <p><strong>Price:</strong> â‚¹{{ product.price }}</p>
          <div *ngIf="isAdmin()">
            <button class="btn btn-warning me-2">Update</button>
            <button class="btn btn-danger">Delete</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

_______

navbar.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-navbar',
  templateUrl: './navbar.component.html',
})
export class NavbarComponent {
  userRole: string = 'Customer'; // Replace with real auth logic
}

________

navbar.component.html

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">Shop3DApp</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav me-auto">
        <li class="nav-item">
          <a class="nav-link" routerLink="/products">Products</a>
        </li>
        <li class="nav-item" *ngIf="userRole === 'Admin'">
          <a class="nav-link" routerLink="/admin">Admin Panel</a>
        </li>
      </ul>
    </div>
  </div>
</nav>

_____
app.module.ts
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';

@NgModule({
  imports: [BrowserModule, FormsModule, HttpClientModule],
  declarations: [AppComponent, ProductComponent, NavbarComponent],
  bootstrap: [AppComponent],
})
export class AppModule {}
